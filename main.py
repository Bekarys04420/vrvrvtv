# -*- coding: utf-8 -*-
import os
import json
import random
from threading import Thread
from flask import Flask
import telebot

# ================= CONFIG =================
TOKEN = os.getenv("TOKEN", "8214776143:AAG7GzwSjdF32o8pAQdtFKt_jNv2A7TBilk")

# 2 –∞–¥–º–∏–Ω ID
ADMIN_IDS = {7186196783, 7335365453}

START_MONEY = 500000
BONUS_AMOUNT = 77777
DATA_FILE = "users.json"

# Flask (Railway “Ø—à—ñ–Ω)
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is running!"

bot = telebot.TeleBot(TOKEN)

# ================= DATA =================
def load_data():
    if not os.path.exists(DATA_FILE):
        return {}
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

users = load_data()

def register_user(user_id, username):
    if str(user_id) not in users:
        users[str(user_id)] = {
            "money": START_MONEY,
            "wins": 0,
            "loses": 0,
            "sent": 0,
            "received": 0,
            "clan": None,
            "xp": 0,
            "level": 1,
            "nickname": username
        }
        save_data(users)

# ================= COMMANDS =================

@bot.message_handler(commands=["start"])
def start(msg):
    register_user(msg.from_user.id, msg.from_user.first_name)
    bot.reply_to(msg, f"""–°”ô–ª–µ–º, –±—ñ–∑–¥—ñ“£ ‚ÄúAddiction‚Äù “ö–æ—à –∫–µ–ª–¥—ñ“£üí∏

–û–π—ã–Ω –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã‚öôÔ∏è:

/balance - ”®–∑ —à–æ—Ç—ã–Ω—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—Éüí≥
/profile - ”®–∑—ñ–Ω—ñ–∑–¥—ñ“£ –ø—Ä–æ—Ñ–∏–ª—å—ã–Ω—ã–∑–¥—ã “õ–∞—Ä–∞—Éüë§
/givemoney @user (—Å—É–º–º–∞) - –ê“õ—à–∞ –∂—ñ–±–µ—Ä—Éüí∏
/list - –ë–∞–π –∞–¥–∞–º–¥–∞—Ä —Ç—ñ–∑—ñ–º—ñüìã
/nick (–∂–∞“£–∞ –Ω–∏–∫) - –ù–∏–∫ ”©–∑–≥–µ—Ä—Ç—É
/c (–∫–ª–∞–Ω –∞—Ç—ã) - –ñ–∞“£–∞ –∫–ª–∞–Ω “õ“±—Ä—É‚öîÔ∏è
/invite @user - –ö–ª–∞–Ω“ì–∞ —à–∞“õ—ã—Ä—É
/remove @user - –ö–ª–∞–Ω–Ω–∞–Ω —à—ã“ì–∞—Ä—É
/r (–∫–ª–∞–Ω –∞—Ç—ã) - –ö–ª–∞–Ω“ì–∞ –∫—ñ—Ä—É

–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã‚öôÔ∏è:
/gmoney @user (—Å—É–º–º–∞) - –ê“õ—à–∞ “õ–æ—Å—Éüí∏
/delmoney @user - –ê“õ—à–∞—Å—ã–Ω –∂–æ—é‚ùå

–≠—Ä–æ—Ç–∏–∫–∞–ª—ã“õ:
/–≤—ã–µ–±–∞—Ç—å, —Ç—Ä–∞—Ö–Ω—É—Ç—å, —Å–µ–∫—Å, –ø–Ω—É—Ç—å (reply –∞—Ä“õ—ã–ª—ã)

–ë–æ–Ω—É—Å:
–±–æ–Ω—É—Å1‚Äì6 (”ô—Ä“õ–∞–π—Å—ã—Å—ã +77777—Ç–≥)

ü§ñ–ë–æ—Ç—Ç—ã –∂–∞—Å–∞–ø —à—ã“õ“õ–∞–Ω –∞–¥–º–∏–Ω: @lliakaiMY 
""")

# –ë–∞–ª–∞–Ω—Å
@bot.message_handler(commands=["balance"])
def balance(msg):
    register_user(msg.from_user.id, msg.from_user.first_name)
    money = users[str(msg.from_user.id)]["money"]
    bot.reply_to(msg, f"üí≥ –ë–∞–ª–∞–Ω—Å: {money} —Ç–≥")

# –ü—Ä–æ—Ñ–∏–ª—å
@bot.message_handler(commands=["profile"])
def profile(msg):
    u = users[str(msg.from_user.id)]
    bot.reply_to(msg, f"""üë§–ü—Ä–æ—Ñ–∏–ª—å:
‚öôÔ∏èID: {msg.from_user.id}
‚îú –ù–∏–∫: {u['nickname']}
‚îú –ê“õ—à–∞üí∞: {u['money']}
‚îú “∞—Ç“õ–∞–Ω–¥–∞—Ä—ã‚úÖ: {u['wins']}
‚îú –ñ–µ“£—ñ–ª–≥–µ–Ω–¥–µ—Ä—ñüõë: {u['loses']}
‚îú –ñ—ñ–±–µ—Ä—ñ–ª–≥–µ–Ωüí∏: {u['sent']}
‚îú –ê–ª—ã–Ω“ì–∞–Ωüíµ: {u['received']}
‚îú –ö–ª–∞–Ω‚öîÔ∏è: {u['clan']}
‚îú –î”ô—Ä–µ–∂–µüìà: {u['level']} lvl (XP: {u['xp']}/100)
""")

# –ù–∏–∫ ”©–∑–≥–µ—Ä—Ç—É
@bot.message_handler(commands=["nick"])
def change_nick(msg):
    args = msg.text.split(" ", 1)
    if len(args) < 2:
        return bot.reply_to(msg, "–ñ–∞“£–∞ –Ω–∏–∫ –∂–∞–∑—ã“£—ã–∑: /nick –ñ–∞“£–∞–ù–∏–∫")
    users[str(msg.from_user.id)]["nickname"] = args[1]
    save_data(users)
    bot.reply_to(msg, f"‚úÖ –ù–∏–∫ '{args[1]}' –±–æ–ª—ã–ø ”©–∑–≥–µ—Ä—Ç—ñ–ª–¥—ñ!")

# –ê“õ—à–∞ –∂—ñ–±–µ—Ä—É
@bot.message_handler(commands=["givemoney"])
def give_money(msg):
    try:
        args = msg.text.split()
        target = msg.reply_to_message.from_user.id if msg.reply_to_message else None
        amount = int(args[-1])
        sender = str(msg.from_user.id)

        if not target:
            return bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –∂–∞—É–∞–ø —Ä–µ—Ç—ñ–Ω–¥–µ –∂–∞–∑—ã“£—ã–∑.")

        if users[sender]["money"] < amount:
            return bot.reply_to(msg, "–ê“õ—à–∞ –∂–µ—Ç–ø–µ–π–¥—ñ!")

        users[sender]["money"] -= amount
        users[sender]["sent"] += amount
        users[str(target)]["money"] += amount
        users[str(target)]["received"] += amount
        save_data(users)

        bot.reply_to(msg, f"‚úÖ –ê“õ—à–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ! {amount} —Ç–≥")
    except:
        bot.reply_to(msg, "“ö–∞—Ç–µ —Ñ–æ—Ä–º–∞—Ç. –ú—ã—Å–∞–ª—ã: /givemoney (reply) 10000")

# –ë–∞–π –∞–¥–∞–º–¥–∞—Ä —Ç—ñ–∑—ñ–º—ñ
@bot.message_handler(commands=["list"])
def rich_list(msg):
    top = sorted(users.items(), key=lambda x: x[1]["money"], reverse=True)[:10]
    text = "üí∏ –ï“£ –±–∞–π –∞–¥–∞–º–¥–∞—Ä:\n\n"
    for uid, data in top:
        text += f"{data['nickname']} ‚Äî {data['money']} —Ç–≥\n"
    bot.reply_to(msg, text)

# –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã
@bot.message_handler(commands=["gmoney"])
def gmoney(msg):
    if msg.from_user.id not in ADMIN_IDS:
        return
    try:
        target = msg.reply_to_message.from_user.id
        amount = int(msg.text.split()[-1])
        users[str(target)]["money"] += amount
        save_data(users)
        bot.reply_to(msg, f"‚úÖ {amount} —Ç–≥ “õ–æ—Å—ã–ª–¥—ã!")
    except:
        bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É: /gmoney (reply) 10000")

@bot.message_handler(commands=["delmoney"])
def delmoney(msg):
    if msg.from_user.id not in ADMIN_IDS:
        return
    try:
        target = msg.reply_to_message.from_user.id
        users[str(target)]["money"] = 0
        save_data(users)
        bot.reply_to(msg, "‚ùå –ê“õ—à–∞—Å—ã –∂–æ–π—ã–ª–¥—ã!")
    except:
        bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É: /delmoney (reply)")

# –ö–ª–∞–Ω –∂–∞—Å–∞—É
@bot.message_handler(commands=["c"])
def clan_create(msg):
    args = msg.text.split()
    if len(args) < 2:
        return bot.reply_to(msg, "–ö–ª–∞–Ω –∞—Ç–∞—É—ã–Ω –∂–∞–∑—ã“£—ã–∑: /c ClanName")
    users[str(msg.from_user.id)]["clan"] = args[1]
    save_data(users)
    bot.reply_to(msg, f"‚öîÔ∏è –ö–ª–∞–Ω “õ“±—Ä—ã–ª–¥—ã: {args[1]}")

# Invite/remove/r (“õ–∞—Ä–∞–ø–∞–π—ã–º —Ç“Ø—Ä–¥–µ)
@bot.message_handler(commands=["invite"])
def clan_invite(msg):
    if not msg.reply_to_message:
        return bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –∂–∞—É–∞–ø —Ä–µ—Ç—ñ–Ω–¥–µ –∂–∞–∑—ã“£—ã–∑.")
    target = str(msg.reply_to_message.from_user.id)
    clan = users[str(msg.from_user.id)]["clan"]
    if not clan:
        return bot.reply_to(msg, "–°–µ–Ω –∫–ª–∞–Ω–¥–∞ –µ–º–µ—Å—Å—ñ“£!")
    users[target]["clan"] = clan
    save_data(users)
    bot.reply_to(msg, f"{users[target]['nickname']} –∫–ª–∞–Ω“ì–∞ “õ–æ—Å—ã–ª–¥—ã: {clan}")

@bot.message_handler(commands=["remove"])
def clan_remove(msg):
    if not msg.reply_to_message:
        return bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –∂–∞—É–∞–ø —Ä–µ—Ç—ñ–Ω–¥–µ –∂–∞–∑—ã“£—ã–∑.")
    target = str(msg.reply_to_message.from_user.id)
    users[target]["clan"] = None
    save_data(users)
    bot.reply_to(msg, f"{users[target]['nickname']} –∫–ª–∞–Ω–Ω–∞–Ω —à—ã“ì–∞—Ä—ã–ª–¥—ã!")

@bot.message_handler(commands=["r"])
def clan_join(msg):
    args = msg.text.split()
    if len(args) < 2:
        return bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É: /r ClanName")
    users[str(msg.from_user.id)]["clan"] = args[1]
    save_data(users)
    bot.reply_to(msg, f"‚öîÔ∏è –°–µ–Ω {args[1]} –∫–ª–∞–Ω—ã–Ω–∞ –∫—ñ—Ä–¥—ñ“£!")

# –ë–æ–Ω—É—Å
@bot.message_handler(func=lambda m: m.text and m.text.lower().startswith("–±–æ–Ω—É—Å"))
def bonus(msg):
    if msg.text.lower() in ["–±–æ–Ω—É—Å1", "–±–æ–Ω—É—Å2", "–±–æ–Ω—É—Å3", "–±–æ–Ω—É—Å4", "–±–æ–Ω—É—Å5", "–±–æ–Ω—É—Å6"]:
        users[str(msg.from_user.id)]["money"] += BONUS_AMOUNT
        save_data(users)
        bot.reply_to(msg, f"üéÅ +{BONUS_AMOUNT} —Ç–≥")
    else:
        bot.reply_to(msg, "“ö–æ–ª–¥–∞–Ω—É: –±–æ–Ω—É—Å1‚Äì6")

# –≠—Ä–æ—Ç–∏–∫–∞–ª—ã“õ
@bot.message_handler(func=lambda m: m.text and m.text.lower() in ["–≤—ã–µ–±–∞—Ç—å", "—Ç—Ä–∞—Ö–Ω—É—Ç—å", "—Å–µ–∫—Å", "–ø–Ω—É—Ç—å"])
def erotic(msg):
    if not msg.reply_to_message:
        return bot.reply_to(msg, "–ë—ñ—Ä–µ—É–¥—ñ“£ —Ö–∞–±–∞—Ä–ª–∞–º–∞—Å—ã–Ω–∞ –∂–∞—É–∞–ø –±–µ—Ä.")
    sender = users[str(msg.from_user.id)]["nickname"]
    target = users[str(msg.reply_to_message.from_user.id)]["nickname"]
    actions = {
        "–≤—ã–µ–±–∞—Ç—å": f"ü•µ {sender} –∂—ë—Å—Ç–∫–æ –≤—ã–µ–±–∞–ª {target}",
        "—Ç—Ä–∞—Ö–Ω—É—Ç—å": f"üî• {sender} –æ—Ç—Ç—Ä–∞—Ö–∞–ª {target}",
        "—Å–µ–∫—Å": f"üí¶ {sender} –æ—Ç—å–µ–±–∞–ª {target} –≤–æ –≤—Å–µ –¥—ã—Ä–æ—á–∫–∏",
        "–ø–Ω—É—Ç—å": f"üëä {sender} –ø–Ω—É–ª {target}"
    }
    bot.send_message(msg.chat.id, actions[msg.text.lower()])

# –û–π—ã–Ω–¥–∞—Ä (—ç–º–æ–¥–∑–∏)
@bot.message_handler(func=lambda m: any(x in m.text.lower() for x in ["–±–∞—Å–∫–µ—Ç–±–æ–ª", "—Ñ—É—Ç–±–æ–ª", "–¥–∞—Ä—Ç—Å", "–±–æ—É–ª–∏–Ω–≥", "–∫–∞–∑–∏–Ω–æ"]))
def play_game(msg):
    sender = str(msg.from_user.id)
    text = msg.text.lower().split()
    if len(text) < 2: return
    game, amount = text[0], int(text[1])
    emoji = {"–±–∞—Å–∫–µ—Ç–±–æ–ª":"üèÄ","—Ñ—É—Ç–±–æ–ª":"‚öΩÔ∏è","–¥–∞—Ä—Ç—Å":"üéØ","–±–æ—É–ª–∏–Ω–≥":"üé≥","–∫–∞–∑–∏–Ω–æ":"üé∞"}[game]
    sent = bot.send_dice(msg.chat.id, emoji=emoji)
    dice_value = sent.dice.value
    win = random.choice([True, False])
    if win:
        users[sender]["money"] += amount
        users[sender]["wins"] += 1
        result = f"‚úÖ “∞—Ç—Ç—ã“£! +{amount} —Ç–≥"
    else:
        users[sender]["money"] -= amount
        users[sender]["loses"] += 1
        result = f"‚ùå “∞—Ç—ã–ª–¥—ã“£! -{amount} —Ç–≥"
    save_data(users)
    bot.send_message(msg.chat.id, f"{result}\n–ë–∞–ª–∞–Ω—Å: {users[sender]['money']} —Ç–≥")

# ================= RUN =================
if __name__ == "__main__":
    Thread(target=lambda: app.run(host="0.0.0.0", port=8080)).start()
    bot.polling(non_stop=True)
